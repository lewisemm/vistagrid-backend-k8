name: vistagrid-backend-k8s
on:
  push:
    branches-ignore:
      - master
  pull_request:
    branches:
      - master
permissions:
  contents: read
jobs:
  test_user_service:
    name: Test user_service
    runs-on: ubuntu-latest
    env:
      SERVER_NAME: 'localhost:5000'
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      REDIS_HOST: 'redis-host-has-been-mocked'
      REDIS_PORT: 1234
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage==7.2.3
      working-directory: user_service
    - name: Test user_service with pytest
      run: coverage run -m pytest
      working-directory: user_service
    - name: Create user_service test coverage report in XML format
      run: coverage xml
      working-directory: user_service
    - name: Upload user_service coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: user_service/coverage.xml
        fail_ci_if_error: true
  test_image_service:
    name: Test image_service
    runs-on: ubuntu-latest
    env:
      DJANGO_SETTINGS_MODULE: 'image_service.settings.dev_settings'
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      CELERY_BROKER_URL: ${{ secrets.CELERY_BROKER_URL }}
      S3_BUCKET: ${{ secrets.S3_BUCKET }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    - name: Install pipenv
      run: |
        pip install --upgrade pip
        pip install pipenv
    - name: Install project dependencies
      run: pipenv install --system --dev
      working-directory: image_service
    - name: Install coverage.py
      run: pip install coverage==7.2.3
    - name: Test image_service with rest_framework.test.APITestCase
      run: coverage run manage.py test
      working-directory: image_service
    - name: Create image_service test coverage report in XML format
      run: coverage xml
      working-directory: image_service
    - name: Upload image_service coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: image_service/coverage.xml
        fail_ci_if_error: true
